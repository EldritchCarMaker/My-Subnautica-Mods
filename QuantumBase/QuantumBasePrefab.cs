using SMLHelper.V2.Assets;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using UnityEngine;
using UWE;

namespace QuantumBase
{
    internal class QuantumBasePrefab : Spawnable
    {
        public QuantumBasePrefab() : base("QuantumBase", "Quantum Base", "how?????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????? fuck off")
        {

        }
        public override GameObject GetGameObject()
        {
            var gameobject = new GameObject("QuantumBaseCreator");
            gameobject.AddComponent<ReplaceWithBasePrefab>();
            return gameobject;
        }
    }

    public class ReplaceWithBasePrefab : MonoBehaviour
    {
        public const string PREFAB_CLASSID = "c80288ce-9522-45f5-b3c2-01fe459ae5fe";

        public void Start()
        {
            if (QuantumBase.main) return;

            CoroutineHost.StartCoroutine(MakeBaseObject());
        }
        public IEnumerator MakeBaseObject()
        {
            var prefabRequest = PrefabDatabase.GetPrefabAsync(PREFAB_CLASSID);
            yield return prefabRequest;
            prefabRequest.TryGetPrefab(out var prefab);

            var baseObject = GameObject.Instantiate(prefab);

            var LWE = baseObject.GetComponent<LargeWorldEntity>();
            LWE.cellLevel = LargeWorldEntity.CellLevel.Global;

            baseObject.transform.localEulerAngles = new Vector3(270, 0, 0);//for some reason the prefab is flipped sideways?
            baseObject.transform.position = transform.position;

            baseObject.AddComponent<QuantumBase>();
        }
    }
}
